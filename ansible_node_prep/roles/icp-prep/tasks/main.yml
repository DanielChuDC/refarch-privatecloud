---
- hosts: all
  become: true
  connection: ssh

  tasks:
  #- name: "Install VIM"
  #  apt: pkg=vim state=installed

  # Need to figure out how to get IP address info
  #- name: "Configure static IP Addresses"

  - name: "Update apt cache"
    apt: update_cache=yes cach_valid_time=3600
    when: ansible_distribution == 'Ubuntu'

  - name: "Enable root login"
    lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: "PermitRootLogin prohibit\-password"
      line: "PermitRootLogin yes"
      state: present
    systemd: name=ssh state=reloaded 

  - name: "Install NTP"
    package:
      name: ntp
      state: installed

# Need to update the /etc/ntp.conf file with ntp info.  geerlingguy.ntp ?

  - name: "Configure sysctl"
    sysctl:
      name=vm.max_map_count
      value: 262144
      state: present

  - name: "Install NFS common packages"
    package:
		  name: nfs-common
			state=installed

  - name: "Install Python"
    package:
		  name: python-setuptools
			state=installed

  # Install Docker

  - name: "Install Linux image extra packages"
    apt: pkg=linux-image-extra-{{ ansible_distribution_release }} state=installed
    apt: pkg=linux-image-extra-virtual state=installed
		when: ansible_disribution == 'Ubuntu'

  - name: "Install additional needed packages"
    apt: pkg=apt-transport-https state=installed
    apt: pkg=ca-certificates state=installed
    apt: pkg=curl state=installed
    apt: pkg=software-properties-common state=installed
		when: ansible_disribution == 'Ubuntu'

  - name: "Install Docker's official GPG Key"
    apt_key: url=https://download.docker.com/linux/ubuntu/gpg state=present
		when: ansible_disribution == 'Ubuntu'

  - name: "Add Docker apt-repository"
    apt_repository: deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
		when: ansible_disribution == 'Ubuntu'

  - name: "Update apt cache"
    apt: update_cache=yes cach_valid_time=3600
		when: ansible_disribution == 'Ubuntu'

  - name: "Install Docker"
    apt: name=docker-ce state=installed
		when: ansible_disribution == 'Ubuntu'

-hosts: boot
  become: true
	connection: ssh

  - name: "Configure ssh key on boot node"
#	  shell: ssh-keygen -t rsa -P ''
    openssh_keypair:
		  type: rsa
			path: lookup('env', 'HOME') + '/.ssh/id_rsa'

  - name: "Copy ssh key to all other nodes"
	  authorized_key:
		  user: root
			state: present
			key: "{{ lookup('file', lookup('env', 'HOME') + '/.ssh/id_rsa.pub') }}"

  - name: "Update /etc/hosts"
	  lineinfile:
		  dest: /etc/hosts
			regexp: '.*{{ item}}$'
			line: "{{ hostvars[item].ansible_host }} {{ item }}"
			state: present
		when: hostvars[item].ansible_host is defined
		with_items: "{{ groups.all }}"

  - name: "Remove 127.0.1.1"
	  lineinfile:
		  dest: /etc/hosts
			regexp: "^127.0.1.1.*"
			state: absent

  - name: "Copy /etc/hosts to all other nodes"
	  copy:
		  src: /etc/hosts
			dest: /etc/hosts
			backup: yes
